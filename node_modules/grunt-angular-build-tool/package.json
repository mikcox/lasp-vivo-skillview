{
  "name": "grunt-angular-build-tool",
  "description": "A build tool for AngularJS applications.",
  "version": "0.1.2",
  "homepage": "https://github.com/claudio-silva/grunt-angular-build-tool",
  "author": {
    "name": "Cláudio Silva",
    "email": "claudio.silva@impactwave.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/claudio-silva/grunt-angular-build-tool.git"
  },
  "bugs": {
    "url": "https://github.com/claudio-silva/grunt-angular-build-tool/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/claudio-silva/grunt-angular-build-tool/blob/master/LICENSE"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "colors": "~0.6.0-1"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.7.1",
    "grunt-contrib-clean": "~0.4.1",
    "time-grunt": "~0.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "angular",
    "angularjs"
  ],
  "readme": "## grunt-angular-build-tool\n\n> A build tool for AngularJS applications.\n\n<br>\nAngularJS is an amazing framework and one of the best for developing highly sophisticated web applications.\n\nThe only problem is, while Angular promotes modular development, it doesn't provide a solution for finding all the required source files of your app and loading them in the correct order. It lets that, humm... _\"trivial\"_ task up for you to solve!...\n\nFurthermore, you'll have to mange your modules' stylesheet and asset dependencies manually.\n\nIf you're already using Grunt, you may have come up with an _ad hoc_ solution to solve these problems (ex: by adapting your code so that it can be handled by an AMD or CommonJS loader), but wouldn't you rather have a specially engineered Grunt plugin handle all of that for you in a truly practical, automated, simple and easy way?\n\nThat is precisely what the 'angular-build-tool' does.\n\n### Features\n\nThis Grunt plugin:\n\n1. Analyzes your AngularJS source code and \"understands\" module dependencies and the relationships between your files. No need for AMD or CommonJS loaders.\n\n2. Accepts source code split into as many files as you want and spread over any directory structure you prefer.\n\n3. Assembles one javascript file (or just a few) for production with all code assembled in the correct loading order required by your module's dependencies.\n\n4. Builds fast in debug mode by generating a single script that loads the original source files in the correct order (no minified or concatenated files in debug builds).\n\n5. Allows you to debug the source code in the browser itself and see readable source code for any debug breakpoint or error location, with the correct original line numbers.\n\n6. Includes in the build _only_ the modules that your app actually needs and discards dead code.\n\n7. Includes in the build the stylesheets and assets each module requires and excludes those that are not used by your app.\n\n8. Can also include in the build scripts that are not based on AngularJS.\n\n9. Recognizes modules and libraries that are loaded independently and, therefore, are not part of the build.\n\n10. Not only builds complete applications but also builds library projects, generating _readable_ redistributable source code files for them.\n\n11. Allows each module to have its own build configuration file. Just drag-and-drop a module to your project and it's ready to build!\n\n12. Integrates easily with other Grunt plugins to expand your build process with minification, optimization, preprocessing and/or compilation steps.\n\n---\n\n### Roadmap\n\n1. ~~Javascript builder.~~ [done]\n2. Per directory build-config files support.\n3. CSS builder.\n4. Assets builder.\n\n**The project is under active development.**  \nMore functionality will be available soon.\n\n---\n\n# Documentation\n\nExtended documentation is available on the [Wiki](https://github.com/claudio-silva/grunt-angular-build-tool/wiki).\n\n## Getting Started\n\n> This plugin is available for installation from **npm**.\n\n>**Do not donwload the source code from the git repository into your project**, for you could end up using a (possibly) very unstable development version and **not a stable release**.\n\nStart by installing Grunt `~0.4.1` on your project.\n\nIf you haven't used [Grunt](http://gruntjs.com) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins.\n\nOnce you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-angular-build-tool --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-angular-build-tool');\n```\n\n## The \"angular-build-tool\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `angular-build-tool` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  'angular-build-tool': {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\nThe available options are explained in the [Configuring tasks](https://github.com/claudio-silva/grunt-angular-build-tool/wiki/Configuring-tasks) page.\n\n### Basic Use\n\nThis is the minimal recommended `Gruntfile.js`.\n\n```js\nmodule.exports = function (grunt)\n{\n  grunt.initConfig ({\n\n    'angular-build-tool': {\n      options: {\n        main: 'mainModuleName'\n      },\n      app: {\n        src:          'src/**/*.js',\n        targetScript: 'build/project.js'\n      }\n    }\n\n  });\n  \n  grunt.loadNpmTasks ('grunt-angular-build-tool');\n  \n  grunt.registerTask ('release', ['angular-build-tool']);\n  grunt.registerTask ('debug', ['angular-build-tool::debug']);\n\n};\n```\n\n### Running tasks\n\nTo run the above task:\n\n- For a releast build, type `grunt angular-build-tool` on the command line;\n- For a debug build, type either:\n    - `grunt angular-build-tool::debug`, or\n    - `grunt angular-build-tool --build=debug`.\n\nIf you define your own alias tasks with more complex build steps, run `grunt your-task-name` instead.\n\n> Tip: you can use the `--build=debug` option to convert any task alias into a _debug_ build (assuming it includes an angular-build-tool subtask).\n\n### The recommended tasks alias\n\nThe example above includes two alias tasks registered at the bottom. These tasks are customizable shortcuts to your build process. They are a starting point for you to expand with additional subtasks provided by other Grunt plugins.\n\nTo assemble a release build of your project, run the command:\n`grunt release`\n\nFor a debug build, run the command:\n`grunt debug`\n\n> These alias are just a suggestion. You may configure your Grunt tasks in any way you want.\n\n### Integrating with other Grunt tasks\n\nIf you wish to minify/optimize your build files, you can add the respective tasks to the `release` task list, __after__ the `angular-build-tool` task.\n\nIf you wish to compile files from other languages to javascript (coffeescript, typescript, etc), they must be compiled prior to the build step, so you should add those tasks to the `release` task list __before__ the `angular-build-tool` task.\n\nIf you use CSS preprocessors, you may have to add the respective tasks to both the `release` and the `debug` task lists.\n\n### Advanced Use\n\nRead the [Configuration examples](https://github.com/claudio-silva/grunt-angular-build-tool/wiki/Configuration-examples) page for additional information and examples.\n\n### Debugging build failures\n\n The build tool will display extended information when warnings or errors occur during the build process if you run the `grunt` command with the `-v` option.\n\nYou may also force Grunt to ignore some warnings and continue building by running `grunt` with the `--force` option (not recommended, though).\n\n## Contributing\n\nIn lieu of a formal style-guide, take care to maintain the existing coding style.\n\nA linter is already present on the project, so just type `grunt` to run it.\n\nIf it's appropriate, create some test cases on the `/test` folder and include them as individual tasks on the project's  Gruntfile.\n\nAlways start developing by creating a topic branch on your forked repository from the latest tagged stable version on the `master` branch.\n\nWhen your work is ready, submit a pull request.\n\n__Important:__ all contributions that are accepted will be made available under the project's license.\n\n## Release History\n\n[v0.1.2](https://github.com/claudio-silva/grunt-angular-build-tool/releases/tag/v0.1.2) / 2012-11-04  \n\n- Major internal refactoring.\n- Bug fixes.\n- More options.\n  \n[v0.1.1](https://github.com/claudio-silva/grunt-angular-build-tool/releases/tag/v0.1.1) / 2012-10-31  \n\n- Documentation updates.\n  \n[v0.1.0](https://github.com/claudio-silva/grunt-angular-build-tool/releases/tag/v0.1.0) / 2012-10-29\n\n- Javascript build support.\n\n## Author\n\n#### Cláudio Silva\n- [GitHub profile](http://github.com/claudio-silva)\n- [LinkedIn profile](http://www.linkedin.com/pub/cl%C3%A1udio-silva/7/713/367)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-angular-build-tool@0.1.2",
  "dist": {
    "shasum": "2f4cd022c28b7215f5728cd15eacc326ecc91db8"
  },
  "_from": "grunt-angular-build-tool@",
  "_resolved": "https://registry.npmjs.org/grunt-angular-build-tool/-/grunt-angular-build-tool-0.1.2.tgz"
}
